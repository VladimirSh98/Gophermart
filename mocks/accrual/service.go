// Code generated by MockGen. DO NOT EDIT.
// Source: internal/app/service/accrual/schema.go

// Package mocks is a generated GoMock package.
package mocks

import (
	reflect "reflect"

	accrual "github.com/VladimirSh98/Gophermart.git/internal/app/client/accrual"
	gomock "github.com/golang/mock/gomock"
)

// MockServiceInterface is a mock of ServiceInterface interface.
type MockServiceInterface struct {
	ctrl     *gomock.Controller
	recorder *MockServiceInterfaceMockRecorder
}

// MockServiceInterfaceMockRecorder is the mock recorder for MockServiceInterface.
type MockServiceInterfaceMockRecorder struct {
	mock *MockServiceInterface
}

// NewMockServiceInterface creates a new mock instance.
func NewMockServiceInterface(ctrl *gomock.Controller) *MockServiceInterface {
	mock := &MockServiceInterface{ctrl: ctrl}
	mock.recorder = &MockServiceInterfaceMockRecorder{mock}
	return mock
}

// EXPECT returns an object that allows the caller to indicate expected use.
func (m *MockServiceInterface) EXPECT() *MockServiceInterfaceMockRecorder {
	return m.recorder
}

// GetByNumber mocks base method.
func (m *MockServiceInterface) GetByNumber(number string) (*accrual.Calculations, error) {
	m.ctrl.T.Helper()
	ret := m.ctrl.Call(m, "GetByNumber", number)
	ret0, _ := ret[0].(*accrual.Calculations)
	ret1, _ := ret[1].(error)
	return ret0, ret1
}

// GetByNumber indicates an expected call of GetByNumber.
func (mr *MockServiceInterfaceMockRecorder) GetByNumber(number interface{}) *gomock.Call {
	mr.mock.ctrl.T.Helper()
	return mr.mock.ctrl.RecordCallWithMethodType(mr.mock, "GetByNumber", reflect.TypeOf((*MockServiceInterface)(nil).GetByNumber), number)
}
