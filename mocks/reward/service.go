// Code generated by MockGen. DO NOT EDIT.
// Source: internal/app/service/reward/schema.go

// Package mocks is a generated GoMock package.
package mocks

import (
	reflect "reflect"

	reward "github.com/VladimirSh98/Gophermart.git/internal/app/repository/reward"
	gomock "github.com/golang/mock/gomock"
)

// MockServiceInterface is a mock of ServiceInterface interface.
type MockServiceInterface struct {
	ctrl     *gomock.Controller
	recorder *MockServiceInterfaceMockRecorder
}

// MockServiceInterfaceMockRecorder is the mock recorder for MockServiceInterface.
type MockServiceInterfaceMockRecorder struct {
	mock *MockServiceInterface
}

// NewMockServiceInterface creates a new mock instance.
func NewMockServiceInterface(ctrl *gomock.Controller) *MockServiceInterface {
	mock := &MockServiceInterface{ctrl: ctrl}
	mock.recorder = &MockServiceInterfaceMockRecorder{mock}
	return mock
}

// EXPECT returns an object that allows the caller to indicate expected use.
func (m *MockServiceInterface) EXPECT() *MockServiceInterfaceMockRecorder {
	return m.recorder
}

// Create mocks base method.
func (m *MockServiceInterface) Create(UserID int) error {
	m.ctrl.T.Helper()
	ret := m.ctrl.Call(m, "Create", UserID)
	ret0, _ := ret[0].(error)
	return ret0
}

// Create indicates an expected call of Create.
func (mr *MockServiceInterfaceMockRecorder) Create(UserID interface{}) *gomock.Call {
	mr.mock.ctrl.T.Helper()
	return mr.mock.ctrl.RecordCallWithMethodType(mr.mock, "Create", reflect.TypeOf((*MockServiceInterface)(nil).Create), UserID)
}

// GetByUser mocks base method.
func (m *MockServiceInterface) GetByUser(UserID int) (reward.Reward, error) {
	m.ctrl.T.Helper()
	ret := m.ctrl.Call(m, "GetByUser", UserID)
	ret0, _ := ret[0].(reward.Reward)
	ret1, _ := ret[1].(error)
	return ret0, ret1
}

// GetByUser indicates an expected call of GetByUser.
func (mr *MockServiceInterfaceMockRecorder) GetByUser(UserID interface{}) *gomock.Call {
	mr.mock.ctrl.T.Helper()
	return mr.mock.ctrl.RecordCallWithMethodType(mr.mock, "GetByUser", reflect.TypeOf((*MockServiceInterface)(nil).GetByUser), UserID)
}

// UpdateByUser mocks base method.
func (m *MockServiceInterface) UpdateByUser(UserID int, balance, withdrawn float64) error {
	m.ctrl.T.Helper()
	ret := m.ctrl.Call(m, "UpdateByUser", UserID, balance, withdrawn)
	ret0, _ := ret[0].(error)
	return ret0
}

// UpdateByUser indicates an expected call of UpdateByUser.
func (mr *MockServiceInterfaceMockRecorder) UpdateByUser(UserID, balance, withdrawn interface{}) *gomock.Call {
	mr.mock.ctrl.T.Helper()
	return mr.mock.ctrl.RecordCallWithMethodType(mr.mock, "UpdateByUser", reflect.TypeOf((*MockServiceInterface)(nil).UpdateByUser), UserID, balance, withdrawn)
}
